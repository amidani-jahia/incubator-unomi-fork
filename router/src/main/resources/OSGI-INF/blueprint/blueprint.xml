<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <bean id="dataOutProcessor" class="org.apache.unomi.router.DataOutProcessor"/>
    <bean id="dataInProcessor" class="org.apache.unomi.router.DataInProcessor">
        <property name="profileService" ref="profileService"/>
    </bean>


    <camelContext xmlns="http://camel.apache.org/schema/blueprint" id="heavyProfileImportPrepare">

        <dataFormats>
            <!-- here we define a Json data format with the id jack and that it should use the TestPojo as the class type when
                 doing unmarshal. The unmarshalTypeName is optional, if not provided Camel will use a Map as the type -->
            <json id="jacksonMarsh" library="Jackson" unmarshalTypeName="org.apache.unomi.api.Profile"/>
        </dataFormats>
        <route>
            <from uri="file:///Users/amidani/Public/test/?fileName=names.txt" />
            <split>
                <tokenize token="\n"/>
                <process ref="dataOutProcessor" />
                <to uri="log:org.apache.unomi.router?level=INFO"/>
                <to uri="direct:profilesObj"/>
            </split>
        </route>
        <route>
            <from uri="direct:profilesObj"/>
            <marshal ref="jacksonMarsh"/>
            <convertBodyTo type="java.lang.String"/>
            <to uri="kafka:localhost:9092?topic=camel-deposit&amp;groupId=unomi-import-group" />
        </route>
    </camelContext>
    <camelContext xmlns="http://camel.apache.org/schema/blueprint" id="heavyProfileImportLoad">
        <dataFormats>
            <!-- here we define a Json data format with the id jack and that it should use the TestPojo as the class type when
                 doing unmarshal. The unmarshalTypeName is optional, if not provided Camel will use a Map as the type -->
            <json id="jacksonLoadMarsh" library="Jackson" unmarshalTypeName="org.apache.unomi.api.Profile"/>
        </dataFormats>
        <route>
            <from uri="kafka:localhost:9092?topic=camel-deposit&amp;autoCommitEnable=true&amp;groupId=unomi-import-group&amp;consumersCount=10" />
            <unmarshal ref="jacksonLoadMarsh"/>
            <process ref="dataInProcessor" />
            <to uri="log:org.apache.unomi.router?level=INFO"/>
        </route>

    </camelContext>

    <reference id="profileService" interface="org.apache.unomi.api.services.ProfileService"/>

</blueprint>